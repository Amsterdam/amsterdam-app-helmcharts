apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "amsterdam-app-contact.fullname" . }}
  labels:
    {{- include "amsterdam-app-contact.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "amsterdam-app-contact.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "amsterdam-app-contact.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "amsterdam-app-contact.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}        
          command:
            - /code/init.sh         
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.probes.enabled }}
          livenessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5          
            httpGet:
              path: /
              port: http  
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5           
            httpGet:
              path: /
              port: http  
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
              {{- range .Values.env }}
              - name: {{ .name }}
                value: {{ .value | quote }}
              {{- end }}
          {{- if .Values.secretProviderClass }}
          volumeMounts:
            - name: secrets-store01-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{- end }}
      {{- if .Values.secretProviderClass }}
      volumes:
      - name: secrets-store01-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "{{ .Values.secretProviderClass }}"
      {{- end }}                
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
